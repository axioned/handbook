"use strict";(self.webpackChunkhandbook=self.webpackChunkhandbook||[]).push([[8106],{3905:(e,n,t)=>{t.d(n,{Zo:()=>u,kt:()=>m});var a=t(7294);function r(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function i(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function l(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?i(Object(t),!0).forEach((function(n){r(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function o(e,n){if(null==e)return{};var t,a,r=function(e,n){if(null==e)return{};var t,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)t=i[a],n.indexOf(t)>=0||(r[t]=e[t]);return r}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)t=i[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var s=a.createContext({}),p=function(e){var n=a.useContext(s),t=n;return e&&(t="function"==typeof e?e(n):l(l({},n),e)),t},u=function(e){var n=p(e.components);return a.createElement(s.Provider,{value:n},e.children)},c={inlineCode:"code",wrapper:function(e){var n=e.children;return a.createElement(a.Fragment,{},n)}},d=a.forwardRef((function(e,n){var t=e.components,r=e.mdxType,i=e.originalType,s=e.parentName,u=o(e,["components","mdxType","originalType","parentName"]),d=p(t),m=r,g=d["".concat(s,".").concat(m)]||d[m]||c[m]||i;return t?a.createElement(g,l(l({ref:n},u),{},{components:t})):a.createElement(g,l({ref:n},u))}));function m(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var i=t.length,l=new Array(i);l[0]=d;var o={};for(var s in n)hasOwnProperty.call(n,s)&&(o[s]=n[s]);o.originalType=e,o.mdxType="string"==typeof e?e:r,l[1]=o;for(var p=2;p<i;p++)l[p]=t[p];return a.createElement.apply(null,l)}return a.createElement.apply(null,t)}d.displayName="MDXCreateElement"},7640:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>s,contentTitle:()=>l,default:()=>c,frontMatter:()=>i,metadata:()=>o,toc:()=>p});var a=t(7462),r=(t(7294),t(3905));const i={id:"WP-CLI",title:"WP-CLI",sidebar_label:"WP-CLI",tags:["cli","wp-cli","maintenance","security","updates","user-roles","plugin-updates"]},l=void 0,o={unversionedId:"decision-records/WP-CLI",id:"decision-records/WP-CLI",title:"WP-CLI",description:"This document is an overview of the required information that a developer needs to have in order to use WP-CLI in any of the WordPress projects.",source:"@site/docs/decision-records/wp-cli.md",sourceDirName:"decision-records",slug:"/decision-records/WP-CLI",permalink:"/docs/decision-records/WP-CLI",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/decision-records/wp-cli.md",tags:[{label:"cli",permalink:"/docs/tags/cli"},{label:"wp-cli",permalink:"/docs/tags/wp-cli"},{label:"maintenance",permalink:"/docs/tags/maintenance"},{label:"security",permalink:"/docs/tags/security"},{label:"updates",permalink:"/docs/tags/updates"},{label:"user-roles",permalink:"/docs/tags/user-roles"},{label:"plugin-updates",permalink:"/docs/tags/plugin-updates"}],version:"current",frontMatter:{id:"WP-CLI",title:"WP-CLI",sidebar_label:"WP-CLI",tags:["cli","wp-cli","maintenance","security","updates","user-roles","plugin-updates"]},sidebar:"tutorialSidebar",previous:{title:"(Example) Using WP-CLI",permalink:"/docs/decision-records/using-wp-cli"},next:{title:"Playbook",permalink:"/docs/category/playbook"}},s={},p=[{value:"Overview",id:"overview",level:2},{value:"Installation of WP-CLI",id:"installation-of-wp-cli",level:3},{value:"Project Setup with WP-CLI",id:"project-setup-with-wp-cli",level:3},{value:"Use Cases of WP-CLI",id:"use-cases-of-wp-cli",level:3},{value:"Creating custom commands in WP CLI",id:"creating-custom-commands-in-wp-cli",level:3},{value:"Some useful commands:",id:"some-useful-commands",level:3}],u={toc:p};function c(e){let{components:n,...t}=e;return(0,r.kt)("wrapper",(0,a.Z)({},u,t,{components:n,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"This document is an overview of the required information that a developer needs to have in order to use WP-CLI in any of the WordPress projects."),(0,r.kt)("h2",{id:"overview"},"Overview"),(0,r.kt)("p",null,"WP-CLI is a command line interface which allows the users to manage their WordPress websites from the command prompt. To upgrade and install plugins/themes, to generate backups, new posts can be published and most of the regular admin actions can be performed with a set of commands."),(0,r.kt)("p",null,"The beauty of the WP-CLI is that it gives us direct control over site. Anything that we do in WordPress admin dashboard can be done using WP-CLI instead. "),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Pre requisites")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"UNIX-like environment (OS X, Linux, FreeBSD, Cygwin);"),(0,r.kt)("li",{parentName:"ul"},"PHP 5.6 or later."),(0,r.kt)("li",{parentName:"ul"},"WordPress 3.7 or later.")),(0,r.kt)("h3",{id:"installation-of-wp-cli"},"Installation of WP-CLI"),(0,r.kt)("p",null,"Run the below commands in terminal:"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"For Linux:")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"curl -O https://raw.githubusercontent.com/wp-cli/builds/gh-pages/phar/wp-cli.phar\nphp wp-cli.phar --info\nchmod +x wp-cli.phar\nsudo mv wp-cli.phar /usr/local/bin/wp\n")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"For Windows:")),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},"Download wp-cli.phar and save it in the ",(0,r.kt)("inlineCode",{parentName:"li"},"/php")," directive of XAMPP installation."),(0,r.kt)("li",{parentName:"ol"},"Move to the ",(0,r.kt)("inlineCode",{parentName:"li"},"/php")," folder using shell and create a wrapping batch script that will create ",(0,r.kt)("inlineCode",{parentName:"li"},"wp.cmd")," in the folder\n",(0,r.kt)("inlineCode",{parentName:"li"},'echo @php "%~dp0wp-cli.phar" %* > wp.cmd')),(0,r.kt)("li",{parentName:"ol"},"Confirm that we have successfuly installed WP-CLI.\n",(0,r.kt)("inlineCode",{parentName:"li"},"wp --info"))),(0,r.kt)("h3",{id:"project-setup-with-wp-cli"},"Project Setup with WP-CLI"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Steps:")),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},"Clone the repo."),(0,r.kt)("li",{parentName:"ol"},"Go to json file > Make the following changes to the file:",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"wordpress version"),(0,r.kt)("li",{parentName:"ul"},"db details: dbuser, host, username, password"),(0,r.kt)("li",{parentName:"ul"},"site detail: site url, site title, admin: name, email, password"))),(0,r.kt)("li",{parentName:"ol"},"Update the plugin version as per requirement in plugin list."),(0,r.kt)("li",{parentName:"ol"},"Run command ",(0,r.kt)("inlineCode",{parentName:"li"},"wp --require=axioned.php setup"))),(0,r.kt)("h3",{id:"use-cases-of-wp-cli"},"Use Cases of WP-CLI"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Manage plugins and themes",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"Installing the WordPress software, themes, and/or plugins"),(0,r.kt)("li",{parentName:"ul"},"Activating/deactivating/updating themes and plugins"),(0,r.kt)("li",{parentName:"ul"},"Resolving conflicts between plugins and themes"),(0,r.kt)("li",{parentName:"ul"},"Creating a child theme"),(0,r.kt)("li",{parentName:"ul"},"Updating core WordPress via WP CLI"))),(0,r.kt)("li",{parentName:"ul"},"Quick security check for wordpress core and plugins"),(0,r.kt)("li",{parentName:"ul"},"Usage in deployment scripts",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"Search and Replace Command"))),(0,r.kt)("li",{parentName:"ul"},"Create loads of dummy content for testing"),(0,r.kt)("li",{parentName:"ul"},"User management via WP CLI",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"Creating or managing users, including changing passwords and other user information"))),(0,r.kt)("li",{parentName:"ul"},"Configuring WP-Cron to run like a real cron via WP CLI for stability",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"Test WP Cron spawning system is running properly"),(0,r.kt)("li",{parentName:"ul"},"Run, schedule, delete, reschedule posts"))),(0,r.kt)("li",{parentName:"ul"},"Editing or optimizing your database, such as deleting post revisions"),(0,r.kt)("li",{parentName:"ul"},"Generating test data "),(0,r.kt)("li",{parentName:"ul"},"Add your own command"),(0,r.kt)("li",{parentName:"ul"},"Managing comments"),(0,r.kt)("li",{parentName:"ul"},"Custom command in WP-CLI"),(0,r.kt)("li",{parentName:"ul"},"DB Migration"),(0,r.kt)("li",{parentName:"ul"},"Run commands on the remote server")),(0,r.kt)("h3",{id:"creating-custom-commands-in-wp-cli"},"Creating custom commands in WP CLI"),(0,r.kt)("p",null,"WP-CLI supports registering any callable class, function, or closure as a command. WP_CLI::add_command() is used for both internal and third-party command registration."),(0,r.kt)("p",null,"The synopsis of a command defines which positional and associative arguments a command accepts. Let\u2019s take a look at the synopsis for wp plugin install:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"    usage: wp plugin install <plugin|zip|url>... [--version=<version>] [--force] [--activate] [--activate-network]\n")),(0,r.kt)("p",null,"In this example, ",(0,r.kt)("inlineCode",{parentName:"p"},"<plugin|zip|url>...")," is the accepted positional argument. In fact, wp plugin install accepts the same positional argument (the slug, ZIP, or URL of a plugin to install) multiple times. ",(0,r.kt)("inlineCode",{parentName:"p"},"[--version=<version>]")," is one of the accepted associative arguments. It\u2019s used to denote the version of the plugin to install. Notice, too, the square brackets around the argument definition; square brackets mean the argument is optional."),(0,r.kt)("p",null,"WP-CLI also has a series of ",(0,r.kt)("a",{parentName:"p",href:"https://make.wordpress.org/cli/handbook/config/"},"global arguments")," which work with all commands. For instance, including --debug means your command execution will display all PHP errors, and add extra verbosity to the WP-CLI bootstrap process."),(0,r.kt)("p",null,"Using similar approach we have created a script that installs wp, creates db, registers user, installs a plugin - activates and deactivates wp plugins via single command. Below is the script for your reference:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"function setup_command() {\n\n  // Read the JSON file\n  $json = file_get_contents('axioned.json');\n  $json_data = json_decode($json, true);\n\n  $path = $json_data['path'];\n  $ver = $json_data['version'];\n\n  $dbname = $json_data['dbname'];\n  $dbuser = $json_data['dbuser'];\n  $dbpass = $json_data['dbpass'];\n  $dbhost = $json_data['dbhost'];\n\n  $site_url = $json_data['site_url'];\n  $title = $json_data['title'];\n  $admin_name = $json_data['admin_name'];\n  $admin_password = $json_data['admin_password'];\n  $admin_email = $json_data['admin_email'];\n\n  $pluginListInstall = $json_data['pluginListInstall'];\n  $pluginListUninstall = $json_data['pluginListUninstall'];\n\n  $acf_key = $json_data['acf_key'];\n  $axioned_theme = $json_data['axioned_theme'];\n\n  WP_CLI::runcommand('core download --path=\"'.$path.'\" --version='.$ver);\n  WP_CLI::runcommand('core config --dbname=\"'.$dbname.'\" --dbuser=\"'.$dbuser.'\" --dbpass=\"'.$dbpass.'\" --dbhost=\"'.$dbhost.'\" --dbprefix=wp_ --path=\"'.$path.'\"');\n  WP_CLI::runcommand('db create --path=\"'.$path.'\"');\n  WP_CLI::line(\"WordPress installation started...\");\n  WP_CLI::runcommand('core install --url=\"'.$site_url.'\" --title=\"'.$title.'\" --admin_name=\"'.$admin_name.'\" --admin_password=\"'.$admin_password.'\" --admin_email=\"'.$admin_email.'\" --path=\"'.$path.'\"');\n  WP_CLI::runcommand('core verify-checksums --version='.$ver.' --path=\"'.$path.'\"',['exit_error' => false]);\n  WP_CLI::line(\"Plugin installation started...\");\n  install($pluginListInstall, $path, $acf_key);\n  uninstall($pluginListUninstall, $path);\n  WP_CLI::runcommand('plugin verify-checksums --all --path=\"'.$path.'\"', ['exit_error' => false]);\n  WP_CLI::runcommand('theme install '.$axioned_theme.' --activate --path=\"'.$path.'\"');\n\n  WP_CLI::success('Setup Website successfully.');\n}\nWP_CLI::add_command('setup', 'setup_command');\n\nfunction install($pluginList, $path, $acf_key) {\n    $plugCount = count($pluginList);\n    $progress = \\WP_CLI\\Utils\\make_progress_bar('Creating Posts', $plugCount);\n    $options = ['exit_error' => false];\n\n    foreach ($pluginList as $plug) {\n      $name = $plug[\"name\"];\n      $status = ($plug[\"status\"] ? $plug[\"status\"] : \"\");\n      $ver = ($plug[\"version\"] ? $plug[\"version\"] : \"\");\n\n      if($name == \"acf-pro\") {\n        if (file_put_contents('acf-pro.zip', file_get_contents(\"https://connect.advancedcustomfields.com/index.php?t=$ver&p=pro&a=download&k=$acf_key\") ) ) {\n          WP_CLI::line(\"ACF Pro downloaded successfully.\");\n          WP_CLI::runcommand(\"plugin install ./acf-pro.zip\");\n          unlink(\"acf-pro.zip\");\n          WP_CLI::runcommand(\"plugin activate advanced-custom-fields-pro\");\n        } else {\n          WP_CLI::line(\"ACF Pro downloading failed.\");\n        }\n        continue;\n      }\n\n      $cli = \"plugin install \".$name.\" \".($status? \" --activate \":\" \").($ver? \"--version=\".$ver : \" \").' --path=\"'.$path.'\" ';\n\n      WP_CLI::runcommand($cli,$options);\n\n      $progress->tick();\n    }\n    $progress->finish();\n    WP_CLI::success($plugCount.' Plugins Installed !!!!');\n}\n\nfunction uninstall($pluginList, $path) {\n    $plugCount = count($pluginList);\n    $progress = \\WP_CLI\\Utils\\make_progress_bar('Creating Posts', $plugCount);\n\n    WP_CLI::line(\"Exicution Started.\");\n\n    foreach ($pluginList as $plug) {\n      $name = $plug[\"name\"];\n        \n      WP_CLI::runcommand(\"plugin deactivate \".$name.' --path=\"'.$path.'\" ');\n      WP_CLI::runcommand(\"plugin uninstall \".$name.' --path=\"'.$path.'\" ');\n\n      $progress->tick();\n    }\n    $progress->finish();\n    WP_CLI::success($plugCount.' Plugins Uninstalled !!!!');\n}\n")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Setup command for this script would be: ",(0,r.kt)("inlineCode",{parentName:"strong"},"wp --require=axioned.php setup"))),(0,r.kt)("h3",{id:"some-useful-commands"},"Some useful commands:"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"1. WP Installation")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},'// download core wp files\nwp core download \n\n// create config file\nwp core config --dbname=wpcli_test --dbuser=phpmyadmin --dbpass=root --dbhost=localhost --dbprefix=wp_\n\n// create db\nwp db create\n\n// install wp with admin user\nwp core install --url=http://localhost/WP-Cli_Testing/wp --title="Your Blog Title" --admin_name=admin --admin_password=admin --admin_email=admin@example.com\n\n//upgrade or downgrade wp core \nwp core update --version=5.8.4 --force\n')),(0,r.kt)("p",null,"Reinstall WordPress Core"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"wp core download --skip-content --force\n")),(0,r.kt)("p",null,"Change home and site url"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"wp option update home 'https://example.com'\nwp option update siteurl 'https://example.com'\n")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"2. Plugins play around")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"wp plugin list\n\nwp plugin install all-in-one-wp-migration\nwp plugin delete all-in-one-wp-migration\n\nwp plugin activate hello\nwp plugin deactivate hello\n\n// install & activate\nwp plugin install all-in-one-wp-migration --activate\n\n// install specific version\nwp plugin install all-in-one-wp-migration --version=7.60\n")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"3. Db Migration"),"\nimport, export and search replace"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"wp db import [<file name>]\nwp db export\nwp search-replace http://example.com http://newexample.com\n")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"4. User Management")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"wp user list \nwp user get admin\n\n// create user \nwp user create ndg ndg@xyz.com --role=editor --first_name=alfa --last_name=beta --user_pass=admin\n\n// manage user capabilities \nwp user list-caps ndg\n\nwp user add-cap ndg edit_plugins\nwp user remove-cap ndg edit_plugins\n\n// manage user role\nwp user add-role ndg administrator\nwp user remove-role ndg administrator\n\nwp user delete ndg\n")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"5. Security check")),(0,r.kt)("p",null,"Core files security check:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"wp core verify-checksums --version=$(wp core version)\n")),(0,r.kt)("p",null,"Plugins security check:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"wp plugin verify-checksums --all\n")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"WP CLI Command details can be found ",(0,r.kt)("a",{parentName:"strong",href:"https://make.wordpress.org/cli/handbook/guides/commands-cookbook/"},"here"))),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Troubleshooting details:"),"\n",(0,r.kt)("a",{parentName:"p",href:"https://make.wordpress.org/cli/handbook/guides/troubleshooting/"},"https://make.wordpress.org/cli/handbook/guides/troubleshooting/")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"References:"),"\n",(0,r.kt)("a",{parentName:"p",href:"https://wp-cli.org/"},"https://wp-cli.org/"),"\n",(0,r.kt)("a",{parentName:"p",href:"https://make.wordpress.org/cli/handbook/"},"https://make.wordpress.org/cli/handbook/")))}c.isMDXComponent=!0}}]);
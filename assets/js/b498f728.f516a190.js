"use strict";(self.webpackChunkhandbook=self.webpackChunkhandbook||[]).push([[793],{3905:(e,n,a)=>{a.d(n,{Zo:()=>u,kt:()=>m});var t=a(7294);function l(e,n,a){return n in e?Object.defineProperty(e,n,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[n]=a,e}function s(e,n){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);n&&(t=t.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),a.push.apply(a,t)}return a}function i(e){for(var n=1;n<arguments.length;n++){var a=null!=arguments[n]?arguments[n]:{};n%2?s(Object(a),!0).forEach((function(n){l(e,n,a[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):s(Object(a)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(a,n))}))}return e}function r(e,n){if(null==e)return{};var a,t,l=function(e,n){if(null==e)return{};var a,t,l={},s=Object.keys(e);for(t=0;t<s.length;t++)a=s[t],n.indexOf(a)>=0||(l[a]=e[a]);return l}(e,n);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(t=0;t<s.length;t++)a=s[t],n.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(l[a]=e[a])}return l}var o=t.createContext({}),p=function(e){var n=t.useContext(o),a=n;return e&&(a="function"==typeof e?e(n):i(i({},n),e)),a},u=function(e){var n=p(e.components);return t.createElement(o.Provider,{value:n},e.children)},c={inlineCode:"code",wrapper:function(e){var n=e.children;return t.createElement(t.Fragment,{},n)}},d=t.forwardRef((function(e,n){var a=e.components,l=e.mdxType,s=e.originalType,o=e.parentName,u=r(e,["components","mdxType","originalType","parentName"]),d=p(a),m=l,g=d["".concat(o,".").concat(m)]||d[m]||c[m]||s;return a?t.createElement(g,i(i({ref:n},u),{},{components:a})):t.createElement(g,i({ref:n},u))}));function m(e,n){var a=arguments,l=n&&n.mdxType;if("string"==typeof e||l){var s=a.length,i=new Array(s);i[0]=d;var r={};for(var o in n)hasOwnProperty.call(n,o)&&(r[o]=n[o]);r.originalType=e,r.mdxType="string"==typeof e?e:l,i[1]=r;for(var p=2;p<s;p++)i[p]=a[p];return t.createElement.apply(null,i)}return t.createElement.apply(null,a)}d.displayName="MDXCreateElement"},5802:(e,n,a)=>{a.r(n),a.d(n,{assets:()=>o,contentTitle:()=>i,default:()=>c,frontMatter:()=>s,metadata:()=>r,toc:()=>p});var t=a(7462),l=(a(7294),a(3905));const s={id:"WP-CLI",title:"WP-CLI",sidebar_label:"WP-CLI",tags:["cli","wp-cli","maintenance","security","updates","user-roles","plugin-updates"]},i=void 0,r={unversionedId:"processes/Toolkit/WP-CLI",id:"processes/Toolkit/WP-CLI",title:"WP-CLI",description:"This document is an overview of the required information that a developer needs to have in order to use WP-CLI in any of the WordPress projects.",source:"@site/docs/processes/Toolkit/wp-cli.md",sourceDirName:"processes/Toolkit",slug:"/processes/Toolkit/WP-CLI",permalink:"/docs/processes/Toolkit/WP-CLI",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/processes/Toolkit/wp-cli.md",tags:[{label:"cli",permalink:"/docs/tags/cli"},{label:"wp-cli",permalink:"/docs/tags/wp-cli"},{label:"maintenance",permalink:"/docs/tags/maintenance"},{label:"security",permalink:"/docs/tags/security"},{label:"updates",permalink:"/docs/tags/updates"},{label:"user-roles",permalink:"/docs/tags/user-roles"},{label:"plugin-updates",permalink:"/docs/tags/plugin-updates"}],version:"current",frontMatter:{id:"WP-CLI",title:"WP-CLI",sidebar_label:"WP-CLI",tags:["cli","wp-cli","maintenance","security","updates","user-roles","plugin-updates"]},sidebar:"tutorialSidebar",previous:{title:"VS Code",permalink:"/docs/processes/Toolkit/VSCode"},next:{title:"WP Engine",permalink:"/docs/processes/backup/wpenginebackup"}},o={},p=[{value:"Overview",id:"overview",level:2},{value:"Installation of WP-CLI",id:"installation-of-wp-cli",level:2},{value:"Project Setup with WP-CLI",id:"project-setup-with-wp-cli",level:2},{value:"Use Cases of WP-CLI",id:"use-cases-of-wp-cli",level:2},{value:"Creating custom commands in WP CLI",id:"creating-custom-commands-in-wp-cli",level:2},{value:"Useful commands",id:"useful-commands",level:2},{value:"Install Wordpress",id:"install-wordpress",level:3},{value:"Update WP core",id:"update-wp-core",level:3},{value:"Reinstall WordPress Core",id:"reinstall-wordpress-core",level:3},{value:"Change home and site url",id:"change-home-and-site-url",level:3},{value:"Working with plugins",id:"working-with-plugins",level:3},{value:"List all plugins",id:"list-all-plugins",level:4},{value:"Install or uninstall a plugin",id:"install-or-uninstall-a-plugin",level:4},{value:"Install specific version",id:"install-specific-version",level:4},{value:"User Management",id:"user-management",level:3},{value:"Fetching users",id:"fetching-users",level:4},{value:"Create or delete user user",id:"create-or-delete-user-user",level:4},{value:"Manage user capabilities",id:"manage-user-capabilities",level:4},{value:"Manage user role",id:"manage-user-role",level:4},{value:"Security check",id:"security-check",level:3},{value:"References",id:"references",level:2}],u={toc:p};function c(e){let{components:n,...a}=e;return(0,l.kt)("wrapper",(0,t.Z)({},u,a,{components:n,mdxType:"MDXLayout"}),(0,l.kt)("p",null,"This document is an overview of the required information that a developer needs to have in order to use WP-CLI in any of the WordPress projects."),(0,l.kt)("h2",{id:"overview"},"Overview"),(0,l.kt)("p",null,"WP-CLI is a command line interface which allows the users to manage their WordPress websites from the command prompt. To upgrade and install plugins/themes, to generate backups, new posts can be published and most of the regular admin actions can be performed with a set of commands."),(0,l.kt)("p",null,"The beauty of the WP-CLI is that it gives us direct control over site. Anything that we do in WordPress admin dashboard can be done using WP-CLI instead."),(0,l.kt)("h2",{id:"installation-of-wp-cli"},"Installation of WP-CLI"),(0,l.kt)("p",null,"For the most up to date instructions, go to the ",(0,l.kt)("a",{parentName:"p",href:"https://wp-cli.org/#installing"},"official documentation"),"."),(0,l.kt)("h2",{id:"project-setup-with-wp-cli"},"Project Setup with WP-CLI"),(0,l.kt)("ol",null,(0,l.kt)("li",{parentName:"ol"},"Clone the repo"),(0,l.kt)("li",{parentName:"ol"},"Go to json file > Make the following changes to the file:",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"wordpress version"),(0,l.kt)("li",{parentName:"ul"},"db details: dbuser, host, username, password"),(0,l.kt)("li",{parentName:"ul"},"site detail: site url, site title, admin: name, email, password"))),(0,l.kt)("li",{parentName:"ol"},"Update the plugin version as per requirement in plugin list."),(0,l.kt)("li",{parentName:"ol"},"Run command to install")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"wp --require=axioned.php setup\n")),(0,l.kt)("h2",{id:"use-cases-of-wp-cli"},"Use Cases of WP-CLI"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Manage plugins and themes",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"Installing the WordPress software, themes, and/or plugins"),(0,l.kt)("li",{parentName:"ul"},"Activating/deactivating/updating themes and plugins"),(0,l.kt)("li",{parentName:"ul"},"Resolving conflicts between plugins and themes"),(0,l.kt)("li",{parentName:"ul"},"Creating a child theme"),(0,l.kt)("li",{parentName:"ul"},"Updating core WordPress via WP CLI"))),(0,l.kt)("li",{parentName:"ul"},"Quick security check for wordpress core and plugins"),(0,l.kt)("li",{parentName:"ul"},"Usage in deployment scripts",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"Search and Replace Command"))),(0,l.kt)("li",{parentName:"ul"},"Create loads of dummy content for testing"),(0,l.kt)("li",{parentName:"ul"},"User management via WP CLI",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"Creating or managing users, including changing passwords and other user information"))),(0,l.kt)("li",{parentName:"ul"},"Configuring WP-Cron to run like a real cron via WP CLI for stability",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"Test WP Cron spawning system is running properly"),(0,l.kt)("li",{parentName:"ul"},"Run, schedule, delete, reschedule posts"))),(0,l.kt)("li",{parentName:"ul"},"Editing or optimizing your database, such as deleting post revisions"),(0,l.kt)("li",{parentName:"ul"},"Generating test data"),(0,l.kt)("li",{parentName:"ul"},"Add your own command"),(0,l.kt)("li",{parentName:"ul"},"Managing comments"),(0,l.kt)("li",{parentName:"ul"},"Custom command in WP-CLI"),(0,l.kt)("li",{parentName:"ul"},"DB Migration"),(0,l.kt)("li",{parentName:"ul"},"Run commands on the remote server")),(0,l.kt)("h2",{id:"creating-custom-commands-in-wp-cli"},"Creating custom commands in WP CLI"),(0,l.kt)("p",null,"WP-CLI supports registering any callable class, function, or closure as a command. WP_CLI::add_command() is used for both internal and third-party command registration."),(0,l.kt)("p",null,"The synopsis of a command defines which positional and associative arguments a command accepts. Let\u2019s take a look at the synopsis for wp plugin install:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"wp plugin install <plugin|zip|url>... [--version=<version>] [--force] [--activate] [--activate-network]\n")),(0,l.kt)("p",null,"In this example, ",(0,l.kt)("inlineCode",{parentName:"p"},"<plugin|zip|url>...")," is the accepted positional argument. In fact, wp plugin install accepts the same positional argument (the slug, ZIP, or URL of a plugin to install) multiple times. ",(0,l.kt)("inlineCode",{parentName:"p"},"[--version=<version>]")," is one of the accepted associative arguments. It\u2019s used to denote the version of the plugin to install. Notice, too, the square brackets around the argument definition; square brackets mean the argument is optional."),(0,l.kt)("p",null,"WP-CLI also has a series of ",(0,l.kt)("a",{parentName:"p",href:"https://make.wordpress.org/cli/handbook/config/"},"global arguments")," which work with all commands. For instance, including --debug means your command execution will display all PHP errors, and add extra verbosity to the WP-CLI bootstrap process."),(0,l.kt)("p",null,"Using similar approach we have created a script that installs wp, creates db, registers user, installs a plugin - activates and deactivates wp plugins via single command. Below is the script for your reference:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-php"},"function setup_command() {\n\n  // Read the JSON file\n  $json = file_get_contents('axioned.json');\n  $json_data = json_decode($json, true);\n\n  $path = $json_data['path'];\n  $ver = $json_data['version'];\n\n  $dbname = $json_data['dbname'];\n  $dbuser = $json_data['dbuser'];\n  $dbpass = $json_data['dbpass'];\n  $dbhost = $json_data['dbhost'];\n\n  $site_url = $json_data['site_url'];\n  $title = $json_data['title'];\n  $admin_name = $json_data['admin_name'];\n  $admin_password = $json_data['admin_password'];\n  $admin_email = $json_data['admin_email'];\n\n  $pluginListInstall = $json_data['pluginListInstall'];\n  $pluginListUninstall = $json_data['pluginListUninstall'];\n\n  $acf_key = $json_data['acf_key'];\n  $axioned_theme = $json_data['axioned_theme'];\n\n  WP_CLI::runcommand('core download --path=\"'.$path.'\" --version='.$ver);\n  WP_CLI::runcommand('core config --dbname=\"'.$dbname.'\" --dbuser=\"'.$dbuser.'\" --dbpass=\"'.$dbpass.'\" --dbhost=\"'.$dbhost.'\" --dbprefix=wp_ --path=\"'.$path.'\"');\n  WP_CLI::runcommand('db create --path=\"'.$path.'\"');\n  WP_CLI::line(\"WordPress installation started...\");\n  WP_CLI::runcommand('core install --url=\"'.$site_url.'\" --title=\"'.$title.'\" --admin_name=\"'.$admin_name.'\" --admin_password=\"'.$admin_password.'\" --admin_email=\"'.$admin_email.'\" --path=\"'.$path.'\"');\n  WP_CLI::runcommand('core verify-checksums --version='.$ver.' --path=\"'.$path.'\"',['exit_error' => false]);\n  WP_CLI::line(\"Plugin installation started...\");\n  install($pluginListInstall, $path, $acf_key);\n  uninstall($pluginListUninstall, $path);\n  WP_CLI::runcommand('plugin verify-checksums --all --path=\"'.$path.'\"', ['exit_error' => false]);\n  WP_CLI::runcommand('theme install '.$axioned_theme.' --activate --path=\"'.$path.'\"');\n\n  WP_CLI::success('Setup Website successfully.');\n}\nWP_CLI::add_command('setup', 'setup_command');\n\nfunction install($pluginList, $path, $acf_key) {\n    $plugCount = count($pluginList);\n    $progress = \\WP_CLI\\Utils\\make_progress_bar('Creating Posts', $plugCount);\n    $options = ['exit_error' => false];\n\n    foreach ($pluginList as $plug) {\n      $name = $plug[\"name\"];\n      $status = ($plug[\"status\"] ? $plug[\"status\"] : \"\");\n      $ver = ($plug[\"version\"] ? $plug[\"version\"] : \"\");\n\n      if($name == \"acf-pro\") {\n        if (file_put_contents('acf-pro.zip', file_get_contents(\"https://connect.advancedcustomfields.com/index.php?t=$ver&p=pro&a=download&k=$acf_key\") ) ) {\n          WP_CLI::line(\"ACF Pro downloaded successfully.\");\n          WP_CLI::runcommand(\"plugin install ./acf-pro.zip\");\n          unlink(\"acf-pro.zip\");\n          WP_CLI::runcommand(\"plugin activate advanced-custom-fields-pro\");\n        } else {\n          WP_CLI::line(\"ACF Pro downloading failed.\");\n        }\n        continue;\n      }\n\n      $cli = \"plugin install \".$name.\" \".($status? \" --activate \":\" \").($ver? \"--version=\".$ver : \" \").' --path=\"'.$path.'\" ';\n\n      WP_CLI::runcommand($cli,$options);\n\n      $progress->tick();\n    }\n    $progress->finish();\n    WP_CLI::success($plugCount.' Plugins Installed !!!!');\n}\n\nfunction uninstall($pluginList, $path) {\n    $plugCount = count($pluginList);\n    $progress = \\WP_CLI\\Utils\\make_progress_bar('Creating Posts', $plugCount);\n\n    WP_CLI::line(\"Exicution Started.\");\n\n    foreach ($pluginList as $plug) {\n      $name = $plug[\"name\"];\n\n      WP_CLI::runcommand(\"plugin deactivate \".$name.' --path=\"'.$path.'\" ');\n      WP_CLI::runcommand(\"plugin uninstall \".$name.' --path=\"'.$path.'\" ');\n\n      $progress->tick();\n    }\n    $progress->finish();\n    WP_CLI::success($plugCount.' Plugins Uninstalled !!!!');\n}\n")),(0,l.kt)("h2",{id:"useful-commands"},"Useful commands"),(0,l.kt)("h3",{id:"install-wordpress"},"Install Wordpress"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},'wp core download # Download core wp files\n\nwp core config --dbname=wpcli_test --dbuser=phpmyadmin --dbpass=root --dbhost=localhost --dbprefix=wp_ # Create config file, change values as necessary\n\nwp db create\n\nwp core install --url=http://localhost/WP-Cli_Testing/wp --title="Your Blog Title" --admin_name=admin --admin_password=admin --admin_email=admin@example.com # Install WordPress and setup an admin user, please do change the password\n')),(0,l.kt)("h3",{id:"update-wp-core"},"Update WP core"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"wp core update --version=5.8.4 --force\n")),(0,l.kt)("h3",{id:"reinstall-wordpress-core"},"Reinstall WordPress Core"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"wp core download --skip-content --force\n")),(0,l.kt)("h3",{id:"change-home-and-site-url"},"Change home and site url"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"wp option update home 'https://example.com'\nwp option update siteurl 'https://example.com'\n")),(0,l.kt)("h3",{id:"working-with-plugins"},"Working with plugins"),(0,l.kt)("h4",{id:"list-all-plugins"},"List all plugins"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"wp plugin list\n")),(0,l.kt)("h4",{id:"install-or-uninstall-a-plugin"},"Install or uninstall a plugin"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"wp plugin install all-in-one-wp-migration\nwp plugin delete all-in-one-wp-migration\n")),(0,l.kt)("p",null,"Activate or deactivate a plugin"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"wp plugin activate hello\nwp plugin deactivate hello\nwp plugin install all-in-one-wp-migration # Install and activate in a single command\n")),(0,l.kt)("h4",{id:"install-specific-version"},"Install specific version"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"wp plugin install all-in-one-wp-migration --version=7.60\n")),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"3. Db Migration"),"\nimport, export and search replace"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"wp db import [<file name>]\nwp db export\nwp search-replace http://example.com http://newexample.com\n")),(0,l.kt)("h3",{id:"user-management"},"User Management"),(0,l.kt)("h4",{id:"fetching-users"},"Fetching users"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"wp user list\nwp user get admin\n")),(0,l.kt)("h4",{id:"create-or-delete-user-user"},"Create or delete user user"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"wp user create ndg ndg@xyz.com --role=editor --first_name=alfa --last_name=beta --user_pass=admin\nwp user delete ndg\n")),(0,l.kt)("h4",{id:"manage-user-capabilities"},"Manage user capabilities"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"wp user list-caps ndg\nwp user add-cap ndg edit_plugins\nwp user remove-cap ndg edit_plugins\n")),(0,l.kt)("h4",{id:"manage-user-role"},"Manage user role"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"wp user add-role ndg administrator\nwp user remove-role ndg administrator\n")),(0,l.kt)("h3",{id:"security-check"},"Security check"),(0,l.kt)("p",null,"Core files security checks:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"wp core verify-checksums --version=$(wp core version)\n")),(0,l.kt)("p",null,"Plugins security check:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"wp plugin verify-checksums --all\n")),(0,l.kt)("h2",{id:"references"},"References"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"https://wp-cli.org/"},"Official website")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"https://make.wordpress.org/cli/handbook/"},"Official CLI Handbook")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"https://make.wordpress.org/cli/handbook/guides/commands-cookbook/"},"WP CLI Commands")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"https://make.wordpress.org/cli/handbook/guides/troubleshooting/"},"Official Troubleshooting Guide"))),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"References:")))}c.isMDXComponent=!0}}]);
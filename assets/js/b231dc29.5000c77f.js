"use strict";(self.webpackChunkhandbook=self.webpackChunkhandbook||[]).push([[8580],{3905:(e,t,r)=>{r.d(t,{Zo:()=>d,kt:()=>g});var n=r(7294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function i(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function o(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?i(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function l(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},i=Object.keys(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var c=n.createContext({}),s=function(e){var t=n.useContext(c),r=t;return e&&(r="function"==typeof e?e(t):o(o({},t),e)),r},d=function(e){var t=s(e.components);return n.createElement(c.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},m=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,i=e.originalType,c=e.parentName,d=l(e,["components","mdxType","originalType","parentName"]),m=s(r),g=a,u=m["".concat(c,".").concat(g)]||m[g]||p[g]||i;return r?n.createElement(u,o(o({ref:t},d),{},{components:r})):n.createElement(u,o({ref:t},d))}));function g(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=r.length,o=new Array(i);o[0]=m;var l={};for(var c in t)hasOwnProperty.call(t,c)&&(l[c]=t[c]);l.originalType=e,l.mdxType="string"==typeof e?e:a,o[1]=l;for(var s=2;s<i;s++)o[s]=r[s];return n.createElement.apply(null,o)}return n.createElement.apply(null,r)}m.displayName="MDXCreateElement"},547:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>c,contentTitle:()=>o,default:()=>p,frontMatter:()=>i,metadata:()=>l,toc:()=>s});var n=r(7462),a=(r(7294),r(3905));const i={id:"git-checklist",title:"GIT Code Review Checklist",sidebar_label:"Code Review Checklist",sidebar_position:2,tags:["git","git checklist","commit","branch"]},o="Checklist Pointers",l={unversionedId:"learning/git/git-checklist",id:"learning/git/git-checklist",title:"GIT Code Review Checklist",description:"Sr No. | Check |",source:"@site/docs/learning/git/code-review-checklist.md",sourceDirName:"learning/git",slug:"/learning/git/git-checklist",permalink:"/docs/learning/git/git-checklist",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/learning/git/code-review-checklist.md",tags:[{label:"git",permalink:"/docs/tags/git"},{label:"git checklist",permalink:"/docs/tags/git-checklist"},{label:"commit",permalink:"/docs/tags/commit"},{label:"branch",permalink:"/docs/tags/branch"}],version:"current",sidebarPosition:2,frontMatter:{id:"git-checklist",title:"GIT Code Review Checklist",sidebar_label:"Code Review Checklist",sidebar_position:2,tags:["git","git checklist","commit","branch"]},sidebar:"tutorialSidebar",previous:{title:"Training Template",permalink:"/docs/learning/git/git-training"},next:{title:"HTML",permalink:"/docs/category/html"}},c={},s=[],d={toc:s};function p(e){let{components:t,...r}=e;return(0,a.kt)("wrapper",(0,n.Z)({},d,r,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"checklist-pointers"},"Checklist Pointers"),(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",{parentName:"tr",align:"center"},"Sr No."),(0,a.kt)("th",{parentName:"tr",align:null},"Check"))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:"center"},"1"),(0,a.kt)("td",{parentName:"tr",align:null},"PR description should be proper.")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:"center"},"2"),(0,a.kt)("td",{parentName:"tr",align:null},"Integration branch for conflicts.")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:"center"},"3"),(0,a.kt)("td",{parentName:"tr",align:null},"Commits should be descriptive and according to the task/bug.")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:"center"},"4"),(0,a.kt)("td",{parentName:"tr",align:null},"Make sure no dist files, editor/IDE files, etc are checked in. There should be a .gitignore for that.")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:"center"},"5"),(0,a.kt)("td",{parentName:"tr",align:null},"No commented code should be present while committing the code.")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:"center"},"6"),(0,a.kt)("td",{parentName:"tr",align:null},"Remove console logs while committing.")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:"center"},"7"),(0,a.kt)("td",{parentName:"tr",align:null},"Commits are small and divided into logical parts.")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:"center"},"8"),(0,a.kt)("td",{parentName:"tr",align:null},"Make sure code is rebased before merging to maintain history.")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:"center"},"9"),(0,a.kt)("td",{parentName:"tr",align:null},"Branching name in the agile should be based on the ticket name.")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:"center"},"10"),(0,a.kt)("td",{parentName:"tr",align:null},"Commits should be more descriptive in terms of whether its bug, enhancement, issue fixes, and ticket number. For example: if it is a bug, ",(0,a.kt)("inlineCode",{parentName:"td"},"[bug] a description of the bug fixed"),".")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:"center"},"11"),(0,a.kt)("td",{parentName:"tr",align:null},"Make sure the code that your are committing is formatted correctly. For formatting you  can used extensions such as Prettier if you're using VS code as IDE.")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:"center"},"12"),(0,a.kt)("td",{parentName:"tr",align:null},"If there is a need of commented code please add TODO and then push on the repo.")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:"center"},"13"),(0,a.kt)("td",{parentName:"tr",align:null},"Make sure that you do not provide much file changes for PR> If you are building a bigger functionality use atomic commits and send it for review.")))),(0,a.kt)("admonition",{title:"Git Checklist",type:"tip"},(0,a.kt)("p",{parentName:"admonition"},"Git Checklist reference link can be found ",(0,a.kt)("a",{parentName:"p",href:"https://docs.google.com/spreadsheets/d/1kbpSVE_ysY8Is5qvuWfCDTTTMp_Wtt5js7FBZzqGODk/edit#gid=1533928750"},(0,a.kt)("strong",{parentName:"a"},"here")),".")))}p.isMDXComponent=!0}}]);